{"description":"@original ons-navigator\n@category navigation\n@description\n[en]This is the main component for navigation. [/en]\n[jp] どうしよう[/jp]\n@example\nclass App extends React.Component {\n renderScene(route, navigator) {\n    const props = route.props || {};\n    props.navigator = navigator;\n    return React.createElement(route.component, route.props);\n }\n\n render() {\n  return (\n    <Navigator\n      renderScene={this.renderScene}\n      initialRoute={{\n        component: Examples,\n        props: {\n          key: 'examples'\n        }\n      }}\n    />\n  );\n }\n}","methods":[{"name":"update","docblock":null,"modifiers":[],"params":[{"name":"pages","type":null},{"name":"obj","type":null}],"returns":null},{"name":"resetPage","docblock":"@method resetPage\n@signature resetPage(route, options = {})\n@param {Object} [route]\n  [en] The route that the page should be reset to.[/en]\n  [ja] どうしよう [/ja]\n@return {Promise}\n  [en]Promise which resolves to the revealed page.[/en]\n  [ja]明らかにしたページを解決するPromiseを返します。[/ja]\n@description\n  [en]Rests the current page[/en]\n  [ja]どうしよう[/ja]","modifiers":[],"params":[{"name":"route"},{"name":"options"}],"returns":null,"description":null},{"name":"resetPageStack","docblock":null,"modifiers":[],"params":[{"name":"routes","type":null},{"name":"options","type":null}],"returns":null},{"name":"pushPage","docblock":null,"modifiers":[],"params":[{"name":"route","type":null},{"name":"options","type":null}],"returns":null},{"name":"popPage","docblock":null,"modifiers":[],"params":[{"name":"options","type":null}],"returns":null}],"props":{"renderScene":{"type":{"name":"func"},"required":true,"description":""},"initialRoutes":{"type":{"name":"array"},"required":false,"description":""},"initialRoute":{"type":{"name":"object"},"required":false,"description":""}}}
